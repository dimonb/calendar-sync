name: Deploy Calendar Sync Chart to Kubernetes

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Log in to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Compute hash
      id: vars
      run: echo "hash=$(echo ${{ hashFiles('calendar_sync/**', 'Dockerfile', 'pyproject.toml', 'poetry.lock') }})" >> $GITHUB_OUTPUT

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ steps.vars.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/calendar-sync:${{ github.sha }} 
          ghcr.io/${{ github.repository }}/calendar-sync:${{ steps.vars.outputs.hash }}
          ghcr.io/${{ github.repository }}/calendar-sync:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3 
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v4.3.0
      with:
        version: 'latest'

    - name: Write kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --create-namespace -n calendar-sync calendar-sync charts/calendar-sync \
          --set-string config.content=${{ secrets.CALENDAR_SYNC_CONFIG }} \
          --set-string secrets.googleCredentialsSecret.data.google_client_secret=${{ secrets.GOOGLE_CLIENT_SECRET }} \
          --set-string secrets.googleCredentialsSecret2.data.google_client_secret=${{ secrets.GOOGLE_CLIENT_SECRET2 }} \
          --set-string uptrace.dsn=${{ secrets.UPTRACE_DSN }} \
          --set-string image.tag=${{ steps.vars.outputs.hash }}